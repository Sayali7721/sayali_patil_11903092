int Z;                                                                                          |main ()
                                                                                                |{
void main()                                                                                     |  int a;
{                                                                                               |  int b;
        int a, b, c;                                                                            |  int c;
        int p = 6;                                                                              |  int p;
        int q;                                                                                  |  int q;
        double r;                                                                               |  double r;
                                                                                                |
        a = 10;                                                                                 |  p = 6;
        b = 20;                                                                                 |  a = 10;
        c = a * b + 25;                                                                         |  b = 20;
        p = 6;                                                                                  |  _1 = a * b;
        q = Z;                                                                                  |  c = _1 + 25;
        r = 34.5;                                                                               |  p = 6;
        Z = r;                                                                                  |  q = Z;
        Z = Z + 1;                                                                              |  r = 3.45e+1;
}                                                                                               |  _2 = (int) r;
                                                                                                |  Z = _2;
~                                                                                               |  Z.0_3 = Z;
~                                                                                               |  _4 = Z.0_3 + 1;
~                                                                                               |  Z = _4;
~                                                                                               |}





1.   	How do the declarations look in the GIMPLE? Specifically, what
     	Happens to multiple variables declared and initialized on the same
     	Line? What happens to global declaration [int Z]?
Ans: 
 	Declarations in GIMPLE are like Algebraic notations that defines machine level 
 	operations. It shows how computer works. Instead of declaring every variable 
 	on same line, in gimple on every line each Identifier is described with its 
 	data type. One declaration per line. The global declaration `int Z` has disappeared 
        and is not explicitly declared, but some new variables are used to 
 	configure global variable.  

2.   	How are complex expressions such as [c = a * b + 25] broken down?
     	Can you determine a rule as to when temporary variables will be
    	Introduced?
Ans: 	
	c = a * b + 25;
	_1 = a * b;
	c = _1 + 25;
	Temporary variables are used whenever there are complex operations. 
	They are used to simplify complex operations by doing one operation per line. 

3.  	How are floats/doubles represented in GIMPLE? What happens when a
     	Float/double is assigned to an integer in [Z = r]?
Ans:
	In GIMPLE first floats/doubles are rounded to 1 decimal place.  Floats and 
	doubles are represented using scientific notation.
	r = 34.5;
	r = 3.45e+1;
	_2 = (int) r;
	Z = _2;
 	Then floats/doubles are converted to integer format by using int keyword. 
	And itâ€™s integer format is again stored in temporary variable. Then temporary	
	variable is assigned to Z

4.   	How are reads/writes to the global variable Z performed?  Why is
     	There a temporary introduced for the statement [Z = Z + 1] but not
     	For the statements [q = Z] or [Z = p]?
Ans:
	Reads/writes to z performed through loads to/stores from locals.
	All the operations on global variables are first broken down into micro-operations. 
	Then micro-operations are assigned to temporary variables. After all operations at 
	last final ans is also stored in temporary variable which again stored into global variable.
	Z = _2;
        Z.0_3 = Z;
        _4 = Z.0_3 + 1;
        Z = _4;
	Z is global variable so temporary variable is introduced. While p, q are local variables 
	which are already declared at starting of GIMPLE file.
Optional problem
----------------

Raw dump:
main ()
gimple_bind <
 int a;
 int b;
 int c;
 int p;
 int q;
 double r;
                                                                                                
 gimple_assign <integer_cst, p, 6, NULL, NULL>
 gimple_assign <integer_cst, a, 10, NULL, NULL>
 gimple_assign <integer_cst, b, 20, NULL, NULL>
 gimple_assign <mult_expr, _1, a, b, NULL>
 gimple_assign <plus_expr, c, _1, 25, NULL>
 gimple_assign <integer_cst, p, 6, NULL, NULL>
 gimple_assign <var_decl, q, Z, NULL, NULL>
 gimple_assign <real_cst, r, 3.45e+1, NULL, NULL>
 gimple_assign <fix_trunc_expr, _2, r, NULL, NULL>
 gimple_assign <ssa_name, Z, _2, NULL, NULL>
 gimple_assign <var_decl, Z.0_3, Z, NULL, NULL>
 gimple_assign <plus_expr, _4, Z.0_3, 1, NULL>
 gimple_assign <ssa_name, Z, _4, NULL, NULL>
 >

